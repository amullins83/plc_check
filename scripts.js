// Generated by CoffeeScript 1.6.1
"use strict";
var diffs, filePath, fs;

fs = require("fs");

filePath = function(path, name) {
  return path + "/" + name;
};

exports.rename = function(path, findExpression, replaceExpression) {
  return fs.readdir(path, function(err, data) {
    var file, fileLocation, index, interpolatedExpression, newName, newPath, replaceVariables, variable, _i, _j, _len, _len1, _ref, _results;
    _results = [];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      file = data[_i];
      fileLocation = filePath(path, file);
      replaceVariables = replaceExpression.match(/\$(\d+)/g);
      interpolatedExpression = replaceExpression;
      if ((replaceVariables != null) && (file.match(findExpression) != null)) {
        _ref = file.match(findExpression);
        for (index = _j = 0, _len1 = _ref.length; _j < _len1; index = ++_j) {
          variable = _ref[index];
          interpolatedExpression = interpolatedExpression.replace(new RegExp("\\$" + index, "g"), variable);
        }
      }
      newName = file.replace(findExpression, interpolatedExpression);
      newPath = filePath(path, newName);
      _results.push(fs.renameSync(fileLocation, newPath));
    }
    return _results;
  });
};

exports.summarize = function(path, keepExpression) {
  return fs.readdir(path, function(err, data) {
    var file, fileLocation, folderData, folderLocation, line, matchText, name, summary, text, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      name = data[_i];
      folderLocation = filePath(path, name);
      if (fs.statSync(folderLocation).isDirectory() && name !== "zips") {
        folderData = fs.readdirSync(folderLocation);
        summary = "";
        _results.push((function() {
          var _j, _k, _len1, _len2, _results1;
          _results1 = [];
          for (_j = 0, _len1 = folderData.length; _j < _len1; _j++) {
            file = folderData[_j];
            fileLocation = filePath(folderLocation, file);
            if (file.match(/.rsl$/) && fs.statSync(fileLocation).isFile()) {
              summary += file + "\n";
              text = fs.readFileSync(fileLocation).toString();
              matchText = text.match(keepExpression);
              if (matchText != null) {
                for (_k = 0, _len2 = matchText.length; _k < _len2; _k++) {
                  line = matchText[_k];
                  summary += line + "\n";
                }
              }
            }
            _results1.push(fs.writeFileSync(filePath(folderLocation, "labs.txt"), summary));
          }
          return _results1;
        })());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  });
};

diffs = function(string1, string2) {
  var foundDiff, index, line, lines1, lines2, output, _i, _len;
  output = "";
  lines1 = string1.split("\n");
  lines2 = string2.split("\n");
  foundDiff = false;
  for (index = _i = 0, _len = lines1.length; _i < _len; index = ++_i) {
    line = lines1[index];
    if (line.match(/.rsl/)) {
      if (!(foundDiff || index === 0)) {
        output += " Good!\n\n";
      }
      output += line + "\n";
      foundDiff = false;
    } else if (line !== lines2[index]) {
      output += "Student Response <<<<\n" + line + "\nCorrect Answer >>>>\n" + lines2[index] + "\n\n";
      foundDiff || (foundDiff = true);
    }
  }
  if (!foundDiff) {
    output += " Good!\n";
  }
  return output;
};

exports.compare = function(path) {
  return fs.readdir(path, function(err, data) {
    var answers, file, fileLocation, folderData, folderLocation, foundLabs, name, studentLabs, _i, _j, _len, _len1, _results;
    answers = fs.readFileSync(filePath(path, "Examples/labs.txt")).toString();
    _results = [];
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      name = data[_i];
      if (!(name === "Examples" || name === "zips")) {
        folderLocation = filePath(path, name);
        if (fs.statSync(folderLocation).isDirectory()) {
          fileLocation = filePath(folderLocation, "labs.txt");
          folderData = fs.readdirSync(folderLocation);
          foundLabs = false;
          for (_j = 0, _len1 = folderData.length; _j < _len1; _j++) {
            file = folderData[_j];
            if (file === "labs.txt") {
              foundLabs = true;
              break;
            }
          }
          if (foundLabs) {
            studentLabs = fs.readFileSync(filePath(folderLocation, "labs.txt")).toString();
            _results.push(fs.writeFileSync(filePath(folderLocation, "diffs.txt"), diffs(studentLabs, answers)));
          } else {
            _results.push(void 0);
          }
        } else {
          _results.push(void 0);
        }
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  });
};
