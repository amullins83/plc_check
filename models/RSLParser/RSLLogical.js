// Generated by CoffeeScript 1.6.1
var RSLLogical;

RSLLogical = (function() {

  function RSLLogical() {}

  RSLLogical.Logical = function(bitwiseFunction) {
    return function(matchValues, dataTable) {
      var destFile, destRank, i, matchText, sourceAfile, sourceArank, sourceBfile, sourceBrank, _i, _len, _ref;
      matchText = matchValues[0], sourceAfile = matchValues[1], sourceArank = matchValues[2], sourceBfile = matchValues[3], sourceBrank = matchValues[4], destFile = matchValues[5], destRank = matchValues[6];
      dataTable[destFile] = dataTable[destFile] || {};
      dataTable[destFile][destRank] = dataTable[destFile][destRank] || {};
      _ref = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        i = _ref[_i];
        dataTable[sourceAfile][sourceArank][i] = dataTable[sourceAfile][sourceArank][i] || 0;
        dataTable[sourceBfile][sourceBrank][i] = dataTable[sourceBfile][sourceBrank][i] || 0;
        dataTable[destFile][destRank][i] = bitwiseFunction(dataTable[sourceAfile][sourceArank][i], dataTable[sourceBfile][sourceBrank][i]);
      }
      return dataTable;
    };
  };

  RSLLogical.AND = RSLLogical.Logical(function(a, b) {
    return a && b;
  });

  RSLLogical.OR = RSLLogical.Logical(function(a, b) {
    return a || b;
  });

  RSLLogical.XOR = RSLLogical.Logical(function(a, b) {
    return a ^ b;
  });

  RSLLogical.NOT = RSLLogical.Logical(function(a, b) {
    return !a;
  });

  return RSLLogical;

})();
